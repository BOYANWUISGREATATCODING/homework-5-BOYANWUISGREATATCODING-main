---
title: "Class Analysis for LING 343"
author: "Boyan Wu"
date: 2023-03-30
format: 
  html:
    embed-resources: true
editor_options: 
  chunk_output_type: console
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
here::i_am("analysis/class_analysis.qmd")
library(here)
library(tidyverse)
```

# Read in Data

Create dataframes from the three rds files in the data folder. 
```{r}
df_compq <- read_rds(here("data", "df_compq.rds"))
df_demo <- read_rds(here("data", "df_demo.rds"))
df_sprt <- read_rds(here("data", "df_sprt.rds"))
```

For each participant, get percent accuracy for comprehension questions
# Participant Accuracy Check
```{r}
df_compq %>%
  group_by(iphash) %>%
  summarize(
    accuracy = sum(correct1)/n()*100
  )
```

# Combine Stimuli Information

Add the information about each stimulus sentence from the stimuli file to
the self-paced reading data. They should have matching label variables.

```{r}
df_stims <- read.csv(here("stimuli", "stimuli-2023-eventive-repl-sprt.csv"))

df_sprt_joined <- left_join(df_sprt, 
                            select(df_stims, -sentence),
                            join_by(label))

df_sprt %>% filter(label == "gp.state.201")
```

## Count Stimuli Per Condition

The first condition column in the stimuli labels the experiment. For 
the experiment labelled "gp", how many stimuli are there per condition?
```{r}
df_stims %>%
  filter(cond1 == "gp") %>%
  group_by(cond2) %>%
  count()
```
How many stimuli are there per item?
```{r}
df_stims %>%
  filter(cond1 == "gp") %>%
  group_by(item) %>%
  count()
```

Answer these questions for the "mklo" stimuli. 
```{r}
df_stims %>%
  filter(cond1 == "mklo") %>%
  group_by(cond2) %>%
  count()

df_stims %>%
  filter(cond1 == "mklo") %>%
  group_by(item) %>%
  count()

```



# McKoon and Love 2011 Replication

The "mklo" stimuli are from the study McKoon and Love 2011. They found
that result ("break") verbs had longer reaction times than manner ("hit") verbs.
The verb is the third word in each sentence. Was their effect replicated in
this experiment? Let's take some steps to see.

McKoon, G., & Love, J. (2011). Verbs in the lexicon: Why is hitting easier than breaking? Language and Cognition, 3, 313–330. <https://doi.org/10.1515/LANGCOG.2011.011>


## Summaries 

For visualization and basic summary statistics, where participants are exposed 
to repeated measures, we usually calculate averages for each participant first. 
We want the average
for each participant for each condition, so averaging "over" all of the items
they saw in that condition. But remember we want to separate the times for each
word, and we are mainly interested in the verb (word 3).

```{r}
df_sprt_joined %>%
  filter(cond1 == "mklo" & word_num %in% c("2", "3", "4")) %>%
  group_by(iphash, cond2, word_num) %>%
  summarize(
    mean = mean(RT, na.rm=TRUE)
  )
  
```

Then, we average those averages to get a condition mean. Did break verbs
take longer than hit verbs?

Try printing your output as a formatted table by piping the dataframe/tibble
to the function `kableExtra::kbl()`. You may need to first install the
package `{kableExtra}` from CRAN. 

```{r}
library(kableExtra)

df_means <- df_sprt_joined %>%
  filter(cond1 == "mklo" & word_num %in% c("2", "3", "4")) %>%
  group_by(iphash, cond2, word_num) %>%
  summarize(
    mean = mean(RT, na.rm=TRUE)
  )

df_cond_means <- df_means %>%
  group_by(cond2, word_num) %>%
  summarize(
    mean = mean(mean)
  ) %>%
  pivot_wider(
    names_from = cond2,
    values_from = mean
  ) %>%
  mutate(
    difference = `break` - `hit`
  )

kbl(df_cond_means, caption = "Condition means for hit vs. break verbs")

```


## Plots

Make a plot showing the means for both conditions for word 3. 
```{r}
library(ggplot2)

df_means <- df_sprt_joined %>%
  filter(cond1 == "mklo" & word_num %in% "3") %>%
  group_by(cond2, word_num) %>%
  summarize(
    mean_RT = mean(RT, na.rm = TRUE)
  )

ggplot(df_means, aes(x = cond2, y = mean_RT, fill = cond2)) +
  geom_bar(stat = "identity", position = "dodge") +
  labs(x = "Condition", y = "Mean RT", fill = "Condition")

```

Now add words 2 and 4 also. Can you put them in one faceted plot?

```{r}
df_means <- df_sprt_joined %>%
  filter(cond1 == "mklo" & word_num %in% c("2", "3", "4")) %>%
  group_by(cond2, word_num) %>%
  summarize(
    mean_RT = mean(RT, na.rm = TRUE)
  )

ggplot(df_means, aes(x = cond2, y = mean_RT, fill = cond2)) +
  geom_bar(stat = "identity", position = "dodge") +
  labs(x = NULL, y = "Mean RT", fill = NULL) +
  facet_wrap(~word_num)

```

# Gennari and Poeppel 2003 Replication

The "gp" stimuli are from the study Gennari and Poeppel 2003. They found 
that eventive verbs had longer RTs than stative verbs. The verb is the fourth
word in these sentences. Was their effect replicated? Try the same steps. 

Gennari, S., & Poeppel, D. (2003). Processing correlates of lexical semantic complexity. Cognition, 89(1), B27–B41. <https://doi.org/10.1016/S0010-0277(03)00069-6>


```{r}
df_stims %>%
  filter(cond1 == "gp") %>%
  group_by(cond2) %>%
  count()

df_stims %>%
  filter(cond1 == "gp") %>%
  group_by(item) %>%
  count()
```

## Summaries
```{r}
df_sprt_joined %>%
  filter(cond1 == "gp" & word_num %in% c("2", "3", "4")) %>%
  group_by(iphash, cond2, word_num) %>%
  summarize(
    mean = mean(RT, na.rm=TRUE)
  )

library(kableExtra)
df_means <- df_sprt_joined %>%
  filter(cond1 == "gp" & word_num %in% c("2", "3", "4")) %>%
  group_by(iphash, cond2, word_num) %>%
  summarize(
    mean = mean(RT, na.rm=TRUE)
  )

df_cond_means <- df_means %>%
  group_by(cond2, word_num) %>%
  summarize(
    mean = mean(mean)
  ) %>%
  pivot_wider(
    names_from = cond2,
    values_from = mean
  ) %>%
  mutate(
    difference = `event` - `state`
  )

kbl(df_cond_means, caption = "Condition means for eventive vs. stative verbs")

```


## Plots
```{r}
library(ggplot2)

df_means <- df_sprt_joined %>%
  filter(cond1 == "gp" & word_num %in% "3") %>%
  group_by(cond2, word_num) %>%
  summarize(
    mean_RT = mean(RT, na.rm = TRUE)
  )

ggplot(df_means, aes(x = cond2, y = mean_RT, fill = cond2)) +
  geom_bar(stat = "identity", position = "dodge") +
  labs(x = "Condition", y = "Mean RT", fill = "Condition")


df_means <- df_sprt_joined %>%
  filter(cond1 == "gp" & word_num %in% c("2", "3", "4")) %>%
  group_by(cond2, word_num) %>%
  summarize(
    mean_RT = mean(RT, na.rm = TRUE)
  )

ggplot(df_means, aes(x = cond2, y = mean_RT, fill = cond2)) +
  geom_bar(stat = "identity", position = "dodge") +
  labs(x = NULL, y = "Mean RT", fill = NULL) +
  facet_wrap(~word_num)
```


